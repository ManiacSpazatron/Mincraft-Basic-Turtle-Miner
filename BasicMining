--This version checks if the turtle has enough fuel and if the inventory is full every 16 blocks
--Bonus features include: basic mob detection and defense/basic item auto suck/program stops when it hits bedrock

local chunkCount = 0

while true do

local blockDetected = turtle.inspect()
local has_block, data = turtle.inspect()
local rightTurn = true
local function canSuck ()
    if turtle.suck() == true then
    turtle.suck()
    canSuck()
    else if turtle.suckUp() == true then
    turtle.suckUp()
    canSuck()
    else if turtle.suckDown() == true then
    turtle.suckDown()
    canSuck()
    end
    end
    end
end
local function mobDefense ()
    if not blockDetected and turtle.attack() or turtle.attackUp() or turtle.attackDown() then
    print("Mob detected in front. Attacking mob")
    turtle.attack()
    turtle.attackUp()
    turtle.attackDown()
    sleep(2)
    mobDefense()
    end
canSuck()
end

for i = 1,16 do

--start of inventory check
    turtle.select(10)
    if turtle.getItemCount() == 0 then
        turtle.select(3)
    else if turtle.getItemCount() ~= 0 then
        turtle.dig()
        mobDefense()
        turtle.select(2)
        turtle.place()
            for i = 2,16 do 
                turtle.select(i)
                if turtle.getSelectedSlot() ~= 0 then
                    turtle.drop()
                end
            end
    turtle.select(2)
    turtle.dig()
    turtle.select(3)
    end
    end
--end of inventory check
--start of refuel
    if turtle.getFuelLevel() <= 100 then
        turtle.dig()
        mobDefense()
        turtle.select(1)
        turtle.place()
        turtle.suck()
        turtle.refuel()
        turtle.dig()
        turtle.select(3)
        print("Fuel level is: ",turtle.getFuelLevel())
    end
--end of refuel
    for i = 1,15 do
        mobDefense()
        if data.name == "minecraft:bedrock" then
            error("Hit bedrock...stopping the program")
        end
        turtle.dig()
        sleep(0.1)
        mobDefense()
        turtle.forward()
        mobDefense()
    end
    if (rightTurn == true and (not (i == 16))) then
        turtle.turnRight()
        turtle.dig()
        mobDefense()
        turtle.forward()
        turtle.turnRight()
        rightTurn = false
    else if (rightTurn == false and (not (i == 16))) then
        turtle.turnLeft()
        turtle.dig()
        mobDefense()
        turtle.forward()
        turtle.turnLeft()
        rightTurn = true
    end
    end
end
--go to the next layer down
    turtle.digDown()
    mobDefense()
    turtle.down()
    mobDefense()
    if rightTurn == true then
        turtle.turnLeft()
        rightTurn = false
    else
        turtle.turnRight()
        rightTurn = true
    end
    chunkCount = chunkCount + 1
    print("its still running...chunks done: ",chunkCount)
end
